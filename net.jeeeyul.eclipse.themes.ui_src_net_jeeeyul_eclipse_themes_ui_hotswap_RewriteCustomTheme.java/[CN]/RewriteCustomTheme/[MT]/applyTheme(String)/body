{
  Debug.println("Theme is about to rewrite");
  CSSEngine cssEngine=WidgetElement.getEngine(display);
  if (hotSwap) {
    HotSwap.INSTANCE.fixWindowMargins();
  }
  ExtendedDocumentCSS documentCSS=(ExtendedDocumentCSS)cssEngine.getDocumentCSS();
  StyleSheet customThemeSheet=findCustomThemeSheet(documentCSS);
  StyleSheet newSheet=cssEngine.parseStyleSheet(new StringReader(css));
  StyleSheetList oldSheetList=documentCSS.getStyleSheets();
  List<StyleSheet> newSheetList=new ArrayList<StyleSheet>();
  for (int i=0; i < oldSheetList.getLength(); i++) {
    StyleSheet oldSheet=oldSheetList.item(i);
    if (oldSheet != customThemeSheet) {
      if (!newSheetList.contains(oldSheet))       newSheetList.add(oldSheet);
    }
 else {
      if (!newSheetList.contains(newSheet))       newSheetList.add(newSheet);
    }
  }
  documentCSS.removeAllStyleSheets();
  if (hotSwap && ENVHelper.INSTANCE.isLunaOrAbove()) {
    HotSwap.INSTANCE.releaseHandleImages(cssEngine);
    Debug.println("Old handle and frame images are disposed.");
  }
  for (  StyleSheet each : newSheetList) {
    documentCSS.addStyleSheet(each);
  }
  cssEngine.reapply();
  for (  Shell each : Display.getDefault().getShells()) {
    each.layout(true,true);
  }
  if (hotSwap && ENVHelper.INSTANCE.isLunaOrAbove()) {
    HotSwap.INSTANCE.fixDragHandles(cssEngine);
    Debug.println("Old handle and frame images are hot-swapped.");
  }
  Debug.println("Theme was re-written");
}
