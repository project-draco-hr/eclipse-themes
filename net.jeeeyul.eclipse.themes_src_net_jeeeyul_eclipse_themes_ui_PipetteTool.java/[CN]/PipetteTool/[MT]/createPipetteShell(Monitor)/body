{
  Display display=Display.getCurrent();
  Rectangle monitorArea=monitor.getBounds();
  final Image image=new Image(display,monitorArea.width,monitorArea.height);
  GC gc=new GC(display);
  gc.copyArea(image,monitorArea.x,monitorArea.y);
  gc.dispose();
  final Shell shell=new Shell(parentShell,SWT.ON_TOP | SWT.NO_TRIM | SWT.DOUBLE_BUFFERED);
  shell.setBounds(monitorArea);
  shell.setBackgroundImage(image);
  shell.addListener(SWT.Dispose,new Listener(){
    @Override public void handleEvent(    Event event){
      image.dispose();
    }
  }
);
  shell.addListener(SWT.MouseDown,new Listener(){
    @Override public void handleEvent(    Event event){
      ImageData imageData=image.getImageData();
      int pixel=imageData.getPixel(event.x,event.y);
      RGB rgb=imageData.palette.getRGB(pixel);
      handleSelection(rgb);
    }
  }
);
  shell.addListener(SWT.Traverse,new Listener(){
    @Override public void handleEvent(    Event event){
      if (event.detail == SWT.TRAVERSE_ESCAPE) {
        cancel();
      }
    }
  }
);
  shell.addListener(SWT.MouseMove,new Listener(){
    @Override public void handleEvent(    Event event){
      ImageData imageData=image.getImageData();
      int pixel=imageData.getPixel(event.x,event.y);
      RGB rgb=imageData.palette.getRGB(pixel);
      ImageData cursorData=upmix(new ImageData(getClass().getResourceAsStream("pipette.png")));
      for (int x=0; x < pipetteColorMask.width; x++) {
        for (int y=0; y < pipetteColorMask.height; y++) {
          boolean override=pipetteColorMask.getAlpha(x,y) != 0;
          if (override) {
            cursorData.setPixel(x,y,cursorData.palette.getPixel(rgb));
          }
        }
      }
      if (shell.getCursor() != null) {
        shell.getCursor().dispose();
      }
      Cursor newCursor=new Cursor(shell.getDisplay(),cursorData,1,14);
      shell.setCursor(newCursor);
      shell.redraw(event.x - 100,event.y - 100,200,200,false);
    }
  }
);
  return shell;
}
