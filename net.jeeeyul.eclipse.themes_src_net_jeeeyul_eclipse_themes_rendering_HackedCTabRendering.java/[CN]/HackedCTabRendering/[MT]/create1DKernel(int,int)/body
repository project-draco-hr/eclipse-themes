{
  int size=radius * 2 + 1;
  float[] kernel=new float[size];
  int radiusSquare=radius * radius;
  float sigmaSquare=2 * sigma * sigma;
  float piSigma=2 * (float)Math.PI * sigma;
  float sqrtSigmaPi2=(float)Math.sqrt(piSigma);
  int start=size / 2;
  int index=0;
  float total=0;
  for (int i=-start; i <= start; i++) {
    float d=i * i;
    if (d > radiusSquare) {
      kernel[index]=0;
    }
 else {
      kernel[index]=(float)Math.exp(-(d) / sigmaSquare) / sqrtSigmaPi2;
    }
    total+=kernel[index];
    index++;
  }
  for (int i=0; i < size; i++) {
    kernel[i]/=total;
  }
  return kernel;
}
