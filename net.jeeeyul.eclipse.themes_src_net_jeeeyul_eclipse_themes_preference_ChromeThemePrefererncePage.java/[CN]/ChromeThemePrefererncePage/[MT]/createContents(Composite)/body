{
  Composite container=new Composite(parent,SWT.NORMAL);
  container.setLayout(new GridLayout());
  folder=new CTabFolder(container,SWT.MULTI);
  ChromeTabRendering renderer=new ChromeTabRendering(folder);
  renderer.setSelectedTabFill(folder.getDisplay().getSystemColor(SWT.COLOR_WHITE));
  renderer.setOuterKeyline(folder.getDisplay().getSystemColor(SWT.COLOR_BLACK));
  renderer.setPadding(5,5,0,7);
  folder.setRenderer(renderer);
  GridData layoutData=new GridData(GridData.FILL_HORIZONTAL);
  folder.setLayoutData(layoutData);
  folder.addCTabFolder2Listener(new CTabFolder2Adapter(){
    @Override public void close(    CTabFolderEvent event){
      event.doit=false;
    }
  }
);
  folder.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event event){
      handleTabSwitching();
    }
  }
);
  folder.setUnselectedCloseVisible(false);
  for (int i=0; i < pages.size(); i++) {
    ChromePage page=pages.get(i);
    Composite control=new Composite(folder,SWT.NORMAL);
    control.setBackgroundMode(SWT.INHERIT_FORCE);
    control.setBackground(getShell().getDisplay().getSystemColor(SWT.COLOR_WHITE));
    page.setTabFolder(folder);
    page.create(control);
    CTabItem item=new CTabItem(folder,SWT.NORMAL);
    item.setControl(control);
    item.setText(page.getTitle());
    item.setImage(page.getPageImage());
  }
  folder.setSelection(0);
  createToolbar();
  createLink(container,Messages.ONLY_WORKS_WITH_CHROME_LINK);
  createGitHubLink(container);
  load();
  return container;
}
